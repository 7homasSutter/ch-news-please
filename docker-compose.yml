services:
  postgres:
    image: postgres:latest
    platform: linux/amd64
    env_file:
      - .env
    environment:
      POSTGRES_USER: ${DB_USER}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
      POSTGRES_DB: ${DB_NAME}
    networks:
      - backend
    ports:
      - "5432:5432"
    volumes:
      - ./db_data:/var/lib/postgresql/data
      - ./init-postgres.sql:/docker-entrypoint-initdb.d/init.sql
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${DB_USER}"]
      interval: 30s
      timeout: 10s
      retries: 5
    restart: always

  mysql:
    image: mysql:latest
    platform: linux/amd64
    env_file:
      - .env
    environment:
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
      MYSQL_DATABASE: ${DB_NAME}
      MYSQL_USER: ${DB_USER}
      MYSQL_PASSWORD: ${DB_PASSWORD}
    networks:
      - backend
    ports:
      - "3306:3306"
    volumes:
      - ./db_data_mysql:/var/lib/mysql
    healthcheck:
      test: ["CMD-SHELL", "mysqladmin ping -h localhost"]
      interval: 30s
      timeout: 10s
      retries: 5
    restart: always

  news-please:
    build: .
    platform: linux/amd64
    depends_on:
      - postgres
    volumes:
      - ./news_data:/root/news-please-repo/data
    networks:
      - backend
    restart: always

networks:
  backend:
    driver: bridge


