version: "3"

services:
  postgres:
    image: postgres:latest
    platform: linux/amd64
    env_file:
      - .env
    environment:
      POSTGRES_USER: ${DB_USER}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
      POSTGRES_DB: ${DB_NAME}
    networks:
      - backend
    ports:
      - "5432:5432"
    volumes:
      - ./db_data/postgresql:/var/lib/postgresql/data
      - ./init-postgres.sql:/docker-entrypoint-initdb.d/init.sql
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${DB_USER}"]
      interval: 30s
      timeout: 10s
      retries: 5
    restart: always

  news-please:
    build: .
    platform: linux/amd64
    depends_on:
      - postgres
    volumes:
      - ./db_data/news_data:/root/news-please-repo/data
    networks:
      - backend
    restart: always

  news-location-parser:
    build: ./news-location-parser
    container_name: newsLocationParser
    depends_on:
      - redis
    volumes:
      - ./news-location-parser/data:/usr/src/data
    ports:
      - "3000:3000"
    networks:
      - backend
    links:
      - redis
    restart: always
    env_file:
      - .env

  redis:
    image: redis:latest
    container_name: redis_instance
    ports:
      - "6379:6379"
    volumes:
      - ./redis/data:/root/redis
      - ./redis/redis.conf:/usr/local/etc/redis/redis.conf
    command: >
      --requirepass ${REDIS_PASSWORD}
    networks:
      - backend
    env_file:
      - .env

networks:
  backend:
    driver: bridge


